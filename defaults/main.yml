---
# File: main.yml - Main default variables for nomad

## Core
nomad_debug: false

### Package
nomad_version: "{{ lookup('env','NOMAD_VERSION') | default('0.8.7', true) }}"
nomad_architecture_map:
  amd64: amd64
  x86_64: amd64
  armv7l: arm
  aarch64: arm64
  32-bit: "386"
  64-bit: amd64
nomad_architecture: "{{ nomad_architecture_map[ansible_architecture] }}"
nomad_pkg: "nomad_{{ nomad_version }}_linux_{{nomad_architecture}}.zip"
nomad_zip_url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_{{nomad_architecture}}.zip"
nomad_checksum_file_url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version}}_SHA256SUMS"

### Paths
nomad_bin_dir: "/usr/local/bin"
nomad_config_dir: "/etc/nomad.d"
nomad_data_dir: "/var/nomad"
nomad_lockfile: "/var/lock/subsys/nomad"
nomad_log_dir: "/var/log/nomad"
nomad_run_dir: "/var/run/nomad"

### System user and group
nomad_manage_user: true
nomad_user: "root"
nomad_manage_group: false
nomad_group: "bin"

### Nomad settings
nomad_datacenter: "dc1"
nomad_region: "global"
nomad_log_level: "INFO"
nomad_syslog_enable: true
nomad_iface: "{{ lookup('env','NOMAD_IFACE') | default(ansible_default_ipv4.interface, true) }}"
nomad_node_name: "{{ inventory_hostname_short }}"
nomad_node_role: "{{ lookup('env','NOMAD_NODE_ROLE') | default('client', true) }}"
nomad_leave_on_terminate: true
nomad_leave_on_interrupt: false
nomad_disable_update_check: false

#### Server settings
nomad_retry_max: 0
nomad_retry_join: false
nomad_retry_interval: "30s"
nomad_rejoin_after_leave: false
nomad_enabled_schedulers:
  - service
  - batch
  - system
nomad_num_schedulers: "{{ ansible_processor_vcpus }}"
nomad_node_gc_threshold: "24h"
nomad_job_gc_threshold: "4h"
nomad_eval_gc_threshold: "1h"
nomad_encrypt: ""

#### Client settings
nomad_node_class: ""
nomad_no_host_uuid: false
nomad_max_kill_timeout: "30s"
nomad_network_speed: 0
nomad_cpu_total_compute: 0
nomad_gc_interval: "1m"
nomad_gc_disk_usage_threshold: 80
nomad_gc_inode_usage_threshold: 70
nomad_gc_parallel_destroys: 2
nomad_reserved:
  cpu: "{{ nomad_reserved_cpu | default('0', true) }}"
  memory: "{{ nomad_reserved_memory | default('0', true) }}"
  disk: "{{ nomad_reserved_disk | default('0', true) }}"
  ports: "{{ nomad_reserved_ports | default('22', true) }}"
nomad_options: {}
nomad_meta: {}
nomad_bootstrap_expect: "{{ nomad_servers | count or 3 }}"

### Addresses
nomad_bind_address: "{{ hostvars[inventory_hostname]['ansible_'+ nomad_iface ]['ipv4']['address'] }}"
nomad_advertise_address: "{{ hostvars[inventory_hostname]['ansible_' + nomad_iface]['ipv4']['address'] }}"

### Ports
nomad_ports:
  http: "{{ nomad_ports_http | default('4646', true) }}"
  rpc: "{{ nomad_ports_rpc | default('4647', true) }}"
  serf: "{{ nomad_ports_serf | default('4648', true) }}"

### Servers
nomad_group_name: "nomad_instances"
nomad_servers: "\
  {% if nomad_use_nomad==false %}\
    {% set _nomad_servers = [] %}\
    {% for host in groups[nomad_group_name] %}\
      {% set _nomad_node_role = hostvars[host]['nomad_node_role'] | default('client', true) %}\
      {% if ( _nomad_node_role == 'server' or _nomad_node_role == 'both') %}\
        {% if _nomad_servers.append(host) %}{% endif %}\
      {% endif %}\
    {% endfor %}\
    {{ _nomad_servers }}\
    {% else %}\
    []\
  {% endif %}"
nomad_gather_server_facts: false

### Consul
nomad_use_nomad: false
nomad_nomad_address: "localhost:8500"
nomad_nomad_servers_service_name: "nomad-servers"
nomad_nomad_clients_service_name: "nomad-clients"


### ACLs
nomad_acl_enabled: "{{ lookup('env', 'NOMAD_ACL_ENABLED') | default('no', true) }}"
nomad_acl_token_ttl: "30s"
nomad_acl_policy_ttl: "30s"
nomad_acl_replication_token: ""

### Vault
nomad_vault_enabled: "{{ lookup('env', 'NOMAD_VAULT_ENABLED') | default('no', true) }}"
nomad_vault_address: "{{ vault_address | default('0.0.0.0', true) }}"
nomad_vault_allow_unauthenticated: true
nomad_vault_create_from_role: ""
nomad_vault_task_token_ttl: ""
nomad_vault_ca_file: ""
nomad_vault_ca_path: ""
nomad_vault_cert_file: ""
nomad_vault_key_file: ""
nomad_vault_tls_server_name: ""
nomad_vault_tls_skip_verify: false
nomad_vault_token: ""

### Docker
nomad_docker_enable: "{{ lookup('env','NOMAD_DOCKER_ENABLE') | default('false', true) }}"
nomad_docker_dmsetup: true

### TLS
nomad_tls_enable: "{{ lookup('env','NOMAD_TLS_ENABLE') | default(false, true) }}"
nomad_tls_src_files: "{{ lookup('env','NOMAD_TLS_SRC_FILES') | default(role_path+'/files', true) }}"

nomad_tls_dir: "{{ lookup('env','NOMAD_TLS_DIR') | default('/etc/nomad/ssl', true) }}"

nomad_tls_ca_crt: "{{ lookup('env','NOMAD_TLS_CA_CRT') | default('ca.crt', true) }}"
nomad_tls_server_crt: "{{ lookup('env','NOMAD_SERVER_CRT') | default('server.crt', true) }}"
nomad_server_key: "{{ lookup('env','NOMAD_SERVER_KEY') | default('server.key', true) }}"
nomad_tls_copy_keys: true

nomad_verify_server_hostname: true
nomad_verify_https_client: true
